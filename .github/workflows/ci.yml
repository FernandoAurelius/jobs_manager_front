name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npx prettier --check .
      - run: npx eslint . --ext .js,.ts,.vue

  backend-lint-test:
    name: Backend Lint & Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Cache Poetry virtualenvs
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions
          poetry config virtualenvs.create true
          poetry install --no-interaction --no-ansi

      - name: Run lint (Black, isort, Flake8)
        run: tox -e lint

      - name: Run type checking (Mypy)
        run: tox -e mypy

      - name: Run tests
        run: tox -e py
